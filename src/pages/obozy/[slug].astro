---
import { Image } from 'astro:assets'
import { PortableText } from 'astro-portabletext'
import Container from '../../components/atoms/Container.astro'
import CalendarIcon from '../../components/atoms/icons/CalendarIcon.astro'
import PinIcon from '../../components/atoms/icons/PinIcon.astro'
import PriceIcon from '../../components/atoms/icons/PriceIcon.astro'
import Heading from '../../components/molecules/Heading.astro'
import type { CampItem } from '../../data/digests/digest-camps-data'
import { getCampPageSlugs } from '../../data/get-camp-page-slugs'
import { getSingleCampData } from '../../data/get-camps-data'
import Layout from '../../layouts/Layout.astro'
import { urlForImage } from '../../utils'

export async function getStaticPaths() {
  async function obtainTeamMemberSlugs() {
    const slugs = await getCampPageSlugs()

    type Slug = {
      camp_item_slug: {
        current: string
      }
    }

    return slugs.map((slug: Slug) => {
      return {
        params: {
          slug: slug.camp_item_slug.current,
        },
      }
    })
  }

  const slugs = await obtainTeamMemberSlugs()

  return [...slugs]
}

const { slug } = Astro.params
const { meta, name, description, image, longDescription, price, endDate, startDate, location, program, priceDetails } =
  (await getSingleCampData(slug)) as CampItem
---

<Layout title={meta.title} description={meta.description}>
  <main>
    <section class="camp-slug-section">
      <Container>
        <div class="intro-wrapper">
          <div class="intro-image-wrapper">
            <Image
              src={urlForImage(image!.source)
                .width(800)
                .format("webp")
                .quality(80)
                .url()}
              alt={image!.alt}
              width={800}
              height={800}
            />
          </div>
          <div class="intro-text-wrapper">
            <div class="intro-heading-wrapper">
              <Heading text={name} size="xl" as="h1" />
            </div>
            <div class="portable-text-wrapper">
              <PortableText value={description} />
            </div>
            <div class="tile-heading-details camp-slug-details-wrapper">
              <div class="tile-details-wrapper">
                {price && (
                  <div class="tile-detail">
                    <div class="tile-icon-wrapper">
                      <PriceIcon width={26} />
                    </div>
                    {price}
                  </div>
                )}
                {location && (
                  <div class="tile-detail">
                    <div class="tile-icon-wrapper">
                      <PinIcon width={26} />
                    </div>
                    {location}
                  </div>
                )}
              </div>
              <div class="tile-heading-time">
                {startDate && (
                  <div class="tile-details-wrapper">
                    <strong>Zaczynamy: </strong>
                    <time>
                      <div class="tile-detail">
                        <div class="tile-icon-wrapper">
                          <CalendarIcon width={26} />
                        </div>
                        {startDate}
                      </div>
                    </time>
                  </div>
                )}
                {endDate && (
                  <div class="tile-details-wrapper">
                    <strong>Ko≈Ñczymy:</strong>
                    <time>
                      <div class="tile-detail">
                        <div class="tile-icon-wrapper">
                          <CalendarIcon width={26} />
                        </div>
                        {endDate}
                      </div>
                    </time>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
        <div class="body-wrapper">
          {program && (
            <div class="program-wrapper portable-text-wrapper">
              <PortableText value={program} />
            </div>
          )}
          <div class="portable-text-wrapper">
            {priceDetails && (
              <div class="price-details-wrapper">
                <PortableText value={priceDetails} />
              </div>
            )}
          </div>
        </div>
      </Container>
    </section>
  </main>
</Layout>

<style>
  .camp-slug-section {
    padding: 14rem 0 0;
  }

  .intro-text-wrapper {
    grid-column: span 2;
    
  }

  .intro-heading-wrapper {
    margin-bottom: 2rem;
  }

  .intro-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 4rem;
  }

  .intro-image-wrapper {
    position: relative;
    width: 100%;
    height: fit-content;
    
    &::after, &::before {
      content: '';
      display: block;      
      width: 100%;
      z-index: 1;
    }

    &::after {
      padding-top: 100%;
    }

    &::before {
        height: 100%;
        background: var(--weirdo-color-accent-2);
        position: absolute;
        top: 1%;
        left: 1%;
        z-index: -1;
      }

      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: 2;
      }
  }

  .body-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    box-shadow: var(--weirdo-shadow-default);
    margin-top: 4rem;
  }

  .price-details-wrapper {
    padding: 2rem;
    background: var(--weirdo-color-accent-2);
    height: 100%;

    li::before {
      background-color: black;
    }
  }

  .program-wrapper {
    grid-column: span 2;
    border: 2px solid var(--weirdo-color-accent-2);
    padding: 2rem;
  }

  .portable-text-wrapper {
    margin: 0;
    
  }

  /* ---- */

  .camp-slug-details-wrapper {
    width: clamp(0px, 100%, 600px);
  }

  .tile-heading-time {
    justify-content: space-between;
    gap: 0.5rem;
  }

  @media (min-width: 768px) {
    .tile-heading-time {
      display: flex;
    }
  }

  .tile-heading-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .tile-heading-details svg,
  .tile-heading-details g,
  .tile-heading-details path {
    fill: var(--weirdo-color-accent-1);
  }

  .tile-heading-details p {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }

  .tile-details-wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin-bottom: 1rem;
  }

  .tile-detail {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }

  .tile-icon-wrapper {
    display: inline-flex;
    background: var(--weirdo-color-accent-1);
    color: white;
    width: fit-content;
    height: fit-content;
    padding: 0.2em;
    align-items: center;
    justify-content: center;
  }

  .tile-icon-wrapper svg,
  .tile-icon-wrapper g,
  .tile-icon-wrapper path {
    fill: white;
  }
</style>