---
import { Image } from 'astro:assets'
import { PortableText } from 'astro-portabletext'
import birthdayBackground from '../assets/ag-birthday-confetti.png'
import birthdayPlaceholder from '../assets/birthday-placeholder.jpg'
import Container from '../components/atoms/Container.astro'
import Heading from '../components/molecules/Heading.astro'
import Banner from '../components/organisms/Banner.astro'
import type { BirthdayData } from '../data/digests/digest-birthday-data'
import { getBirthdayData } from '../data/get-birthday-data'
import Layout from '../layouts/Layout.astro'

const { meta, banners, intro, priceSection, locationSection } = (await getBirthdayData()) as BirthdayData
---

<Layout title={meta.title} description={meta.description}>
  <main>
    <section>
      {banners && (
        <Banner data={banners[0]} />
      )}
    </section>
    <section class="section-intro">
      <div class="background-image">
        <Image src={birthdayBackground} alt="placeholder" width={1920} />
      </div>
      <Container>
        {intro && (
          <div class:list={["intro-wrapper"]}>
            <Heading as='h1' size='xl' text="Urodziny z Akademią Gimnastyki" />
            <div class:list={["portable-text-wrapper"]}>
              <PortableText value={intro} />
            </div>
          </div>
        )}
      </Container>
    </section>
    <section class="section-price">
      <Container>
        <div class="grid-wrapper">
          <div class="content-wrapper">
            {priceSection.heading && (
              <Heading as='h1' size='xl' text={priceSection.heading} />
            )}
            <div class="description-wrapper">
              <p>Cena:</p>
              <Heading as='h2' size="lg" text={priceSection.price} />
              <div class="portable-text-wrapper">
                <PortableText value={priceSection.description} />
              </div>
            </div>
            {priceSection.extraServices && (
              <div class="extraservices-wrapper">
                <p>Dodatkowe usługi:</p>
                <ul class="custom-list">
                {priceSection.extraServices.map((service) => (
                    <li>{service.name}: <strong>{service.price}</strong></li>
                  ))}
                  </ul>
              </div>
            )}
          </div>
          <div class="images-wrapper">
            <div class="image-wrapper" data-weirdo="images-move">
              <Image src={birthdayPlaceholder} alt="placeholder" />
            </div>
            <div class="image-wrapper" data-weirdo="images-move">
              <Image src={birthdayPlaceholder} alt="placeholder" />
            </div>
          </div>
        </div>
      </Container>
    </section>
    <section class="location-section">
      <Container>
        <div class="heading-wrapper">
          <Heading text={locationSection.heading} as='h1' size='xl' />
        </div>
        {locationSection.locations && (
        <div class="locations-grid">
          {locationSection.locations.map((location) => (
            <div>
              <Heading text={location.location.name} as='h2' size='lg' />
              <PortableText value={location.info} />
            </div>
          ))}
        </div>
          )}
        </Container>
    </section>
  </main>
</Layout>

<style>
  .section-intro {
    position: relative;
    padding: 100px 0;

    @media (min-width: 1180px) {
      padding: 150px 0;
    }
  }

  .background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0.25;

    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background: linear-gradient(0, rgba(255, 255, 255, 1) 0%, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 0) 80%, rgba(255, 255, 255, 1) 100%);
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
    }

    img {
      object-fit: cover;
      width: 100%;
      height: 100%;
    }
  }

  .grid-wrapper {
    display: grid;
    /* grid-template-columns: repeat(2, 1fr); */
    gap: 20px;

    @media (min-width: 1180px) {
      grid-template-columns: 1fr 1fr;
    }
  }

  .description-wrapper {
    padding-top: 1.25rem;
    
    h2 {
      color: var(--weirdo-color-accent-3);
      padding-top: 0.5rem;
    }
  }

  .content-wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-top: 100px;
    padding-bottom: 100px;
    
    @media (min-width: 768px) and (max-width: 1179px) {
      max-width: 950px;
      margin: 0 auto;
    }

    @media (min-width: 768px) {
      padding: 100px 4rem;
    }
    
    @media (min-width: 1180px) {
      margin-top: 100px;
      padding: 0 4rem;
    }

    &::after,
    &::before {
      content: '';
      display: block;
      position: absolute;
      width: 4rem;
      height: 4rem;
    }

    &::before {
      background: var(--weirdo-color-accent-2);
      top: 0;
      left: 0;
    }

    &::after {
      background: var(--weirdo-color-accent-1);
      bottom: 0;
      right: 0;
    }
  }

  .intro-wrapper {
    width: clamp(390px, 100%, 800px);
    margin: 0 auto;

    @media (min-width: 768px) {
      text-align: center;
    }
  }

  .images-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    margin-top: 50px;

    @media (min-width: 768px) and (max-width: 1179px) {
      flex-direction: row;
      justify-content: space-around;
    }

    @media (min-width: 1180px) {
      margin-top: 0;
    }
  }

  .image-wrapper {
    position: relative;
    width: 375px;
    z-index: -1;

    &:first-child {
      top: 0;
      transform: rotate(-5deg);

      @media (min-width: 1180px) {
        top: 50%;
      }

      &::before {
        content: '';
        display: block;
        width: 100%;
        height: 100%;
        padding-top: 100%;
        background: var(--weirdo-color-accent-2);
        position: absolute;
        top: 1%;
        left: 1%;
        z-index: -1;
      }
    }

    &:last-child {
      top: 5%;
      transform: rotate(-5deg);

      @media (min-width: 768px) {
        transform: rotate(5deg)
      }

      @media (min-width: 1180px) {
        top: calc(50% + 80px);

      }

      &::before {
        content: '';
        display: block;
        width: 100%;
        height: 100%;
        padding-top: 100%;
        background: var(--weirdo-color-accent-2);
        position: absolute;
        top: 1%;
        left: 1%;
        z-index: -1;
      }
    }

    &::after {
      content: '';
      display: block;
      padding-top: 100%;
    }

    img {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .section-price {
    margin-bottom: 100px;
  }

  .extraservices-wrapper {
    padding-top: 1.25rem;

    p {
    margin-bottom: 1em;
    text-wrap: balance;

    @media (min-width: 768px) {
      margin-bottom: 0.7em;
    }
  }
  strong {
    color: var(--weirdo-color-accent-3)
  }
  }

  .location-section {
    padding: 100px 0;

    @media (min-width: 1180px) {
      padding: 150px 0;
    }
  }

  .locations-grid {
    display: grid;
    gap: 20px;
    padding-top: 50px;

    @media (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>

<script>
  // Function that moves images parallax up or down when user scrolls
  // it should be applied only on screens larger than 1180px
  const images = document.querySelectorAll('[data-weirdo="images-move"]');
  const windowWidth = window.innerWidth;

  window.addEventListener('load', () => {
    if(window.innerWidth >= 1180) {
      window.addEventListener('scroll', moveImages);
    }
  });

  window.addEventListener('resize', () => {
    if(window.innerWidth >= 1180) {
      window.addEventListener('scroll', moveImages);
    } else {
      window.removeEventListener('scroll', moveImages);
    }
  });

  function moveImages() {
    images.forEach((image, index) => {
      const speed = 0.25;
      //@ts-expect-error
      image.style.transform = `translateY(-${window.scrollY * speed}px) rotate(${index % 2 === 0 ? -5 : 5}deg)`;
    });
  }

  
</script>
