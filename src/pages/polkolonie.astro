---
import { Image } from 'astro:assets'
import { PortableText } from 'astro-portabletext'
import Container from '../components/atoms/Container.astro'
import ArrowRight from '../components/atoms/icons/ArrowRight.astro'
import ClockIcon from '../components/atoms/icons/ClockIcon.astro'
import EventTileDetails from '../components/molecules/EventTileDetails.astro'
import Heading from '../components/molecules/Heading.astro'
import { type SummerCamps, getSummerCamps } from '../data/get-summer-camps-data'
import Layout from '../layouts/Layout.astro'
import { urlForImage } from '../utils'

const {
  meta,
  name,
  description,
  sessions,
  image,
  longDescription,
  price,
  location,
  program,
  priceDetails,
} = (await getSummerCamps()) as SummerCamps
---

<Layout title={meta.title} description={meta.description}>
  <main>
    <section class="camp-slug-section">
      <Container>
        <div class="intro-wrapper">
          <div class="intro-image-wrapper">
            <Image
              src={urlForImage(image!.source)
                .width(800)
                .format("webp")
                .quality(80)
                .url()}
              alt={image!.alt}
              width={800}
              height={800}
            />
          </div>
          <div class="intro-text-wrapper">
            <div>
              <div class="intro-heading-wrapper">
                <Heading text={name} size="xl" as="h1" />
              </div>
              <div class="portable-text-wrapper">
                <PortableText value={description} />
              </div>
              <EventTileDetails 
                price={price} 
                location={location} 
              />
              
            </div>
                <a href='https://wypoczynekdzieci.pl/rejestracja-uczestnikow/' class="weirdo-button--color-accent-2" target="_blank">
                  Zapisy na półkolonie
                  <ArrowRight width={24} />
                </a>
          </div>
        </div>
          {sessions && (
            <div>
              <Heading text="Turnusy" size="lg" as="h2" />
                <div class="sessions-wrapper">
                  {sessions.map((session, index) => (
                    <div class="session-wrapper">
                      <small class="index">{index + 1}</small>
                      <div>
                        <p>{session.name}</p>
                        <div class="time-wrapper">
                        {session.startTime && (
                          <div class="tile-details-wrapper">
                            <strong>Zaczynamy:</strong>
                            <time>
                              <div class="tile-detail">
                                <div class="tile-icon-wrapper">
                                  <ClockIcon width={26} />
                                </div>
                                {session.startTime}
                              </div>
                            </time>
                          </div>
                          )}
                       {session.endTime && (
                          <div class="tile-details-wrapper">
                            <strong>Kończymy:</strong>
                            <time>
                              <div class="tile-detail">
                                <div class="tile-icon-wrapper">
                                  <ClockIcon width={26} />
                                </div>
                                {session.endTime}
                              </div>
                            </time>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
          {longDescription && (
            <div class="long-description-wrapper portable-text-wrapper">
              <PortableText value={longDescription} />
            </div>
          )}
        <div class="body-wrapper">
          {program && (
            <div class="program-wrapper portable-text-wrapper">
              <Heading text="Program:" size="md" as="h3" />
              <PortableText value={program} />
            </div>
          )}
            {priceDetails && (
                <div class="price-details-wrapper portable-text-wrapper">
                <Heading text="Szczegóły ceny:" size="md" as="h3" />
                <PortableText value={priceDetails} />
                </div>
            )}
        </div>
      </Container>
    </section>
  </main>
</Layout>

<style>
  .camp-slug-section {
    padding-top: 8rem;
    padding-bottom: 4rem;

    @media(min-width: 768px) {
      padding-top: 11rem;
      padding-bottom: 0;
    }

    @media(min-width: 1024px) {
      padding-top: 14rem;
    }
  }

  .intro-wrapper {
    margin-bottom: 4rem;
    @media(min-width: 768px) {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 4rem;
    }

    @media(min-width: 1200px) {
      grid-template-columns: repeat(3, 1fr);
  }
}

  .intro-text-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    
    @media(min-width: 1200px) {
      grid-column: span 2;
    }
  }

  .intro-heading-wrapper {
    margin-bottom: 2rem;
  }


  .intro-image-wrapper {
    position: relative;
    width: 100%;
    height: fit-content;
    margin-bottom: 2rem;
    
    &::after, &::before {
      content: '';
      display: block;      
      width: 100%;
      z-index: 1;
    }

    &::after {
      padding-top: 100%;
    }

    &::before {
      height: 100%;
      background: var(--weirdo-color-accent-2);
      position: absolute;
      top: 1%;
      left: 1%;
      z-index: -1;
    }

    @media(min-width: 768px) {
      margin-bottom: 0;
    }

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: 2;
    }
  }

  .long-description-wrapper {
    padding-top: 4rem;
  }

  .body-wrapper {
    box-shadow: var(--weirdo-shadow-default);
    margin-top: 2rem;
    
    @media (min-width: 1024px) {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      margin-top: 4rem;
    }
  }

  .program-wrapper, .price-details-wrapper {
    h3 {
      margin-bottom: 0.5em;
    }
  }

  .price-details-wrapper {
    padding: 1rem;
    background: var(--weirdo-color-accent-2);
    height: 100%;
    
    @media (min-width: 1024px) {
      padding: 2rem;
    }

    li::before {
      background-color: black;
    }

  }

  .program-wrapper {
    grid-column: span 2;
    border: 2px solid var(--weirdo-color-accent-2);
    padding: 1rem;

    @media (min-width: 1024px) {
      padding: 2rem;
    }
  }

  .portable-text-wrapper {
    margin: 0;
    
  }

  .sessions-wrapper {
    margin-top: 1rem;
    display: grid;
    width: 100%;
    gap: 1rem;

    @media (min-width: 768px) {
    margin-top: 0.5rem;

      grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
    }

    @media (min-width: 1024px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .session-wrapper {
    display: flex;
    gap: 0.5rem;
    
    small {
      font-size: var(--weirdo-text-4xl);
      line-height: 1em;
    }

    @media (min-width: 768px) {
      gap: 1.5rem;

      small {
        font-size: var(--weirdo-text-2xl);
      }
    }
  }

  .tile-details-wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin-bottom: 1rem;
  }

  .tile-detail {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }

  .tile-icon-wrapper {
    display: inline-flex;
    background: var(--weirdo-color-accent-1);
    color: white;
    width: fit-content;
    height: fit-content;
    padding: 0.2em;
    align-items: center;
    justify-content: center;
  }

  .tile-icon-wrapper svg,
  .tile-icon-wrapper g,
  .tile-icon-wrapper path {
    fill: white;
  }

  .time-wrapper {
    display: flex;
    gap: 2rem;
  }

  .index {
    color: var(--weirdo-color-accent-3);
  }
</style>