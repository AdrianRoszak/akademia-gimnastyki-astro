---
import { PortableText } from 'astro-portabletext'
import Container from '../components/atoms/Container.astro'
import Heading from '../components/molecules/Heading.astro'
import type { FaqData } from '../data/digests/digest-faq-data'
import { getFaqData } from '../data/get-faq-data'
import Layout from '../layouts/Layout.astro'

const { title, lead, questions, meta } = (await getFaqData()) as FaqData
---

<Layout title={meta.title} description={meta.description}>
  <main>
    <section>
      <Container>
        <div class="heading-wrapper">
          <Heading as="h1" text={title} size='xl' />
          <p>{lead}</p>
        </div>
      {questions.map(({ question, answer }, index) => (
        <details class="faq-details">
          <summary aria-expanded="false" >
            <small>0{index+1}</small>
            <Heading as="h2" size="md" text={question} />
            </summary>
            <div class="portable-text-wrapper" data-weirdo-show >
              <PortableText value={answer} />
            </div>
        </details>
      ))}
      </Container>
    </section>
  </main>
</Layout>

<style>
  section {
    padding-top: 14rem;
  }

  .heading-wrapper {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    width: clamp(0px, 100%, 800px);
    margin: 0 auto 4rem;
  }

.faq-details {
  cursor: pointer;
  margin-bottom: 10px;

  summary {
    font-size: var(--weirdo-text-md);
    outline: none;
    padding: 2rem 1rem;
    background-color: #fafafa;
    transition: background-color 0.3s ease;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    align-items: center;
    gap: 1rem;
    display: block;
    
    @media screen and (min-width: 768px) {
      display: flex;
    }

    &:hover {
      background-color: #fcfcfc;
    }

    &::marker {
      content: none;
    }

    small {
      font-size: var(--weirdo-text-lg);
      color: var(--weirdo-color-accent-3);
    }

  }

  div {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s ease, opacity 0.5s ease;
    opacity: 0;
    padding: 0 0 2rem 1rem;

    @media (min-width: 768px) {
          padding: 0 0 2rem 3.5rem;
    }
  }
  
}

.faq-details[open]{
  div {
   /* max-height: 200px; Możesz dostosować wartość max-height w zależności od treści */
   opacity: 1;
 }
}

</style>

<script>

  window.addEventListener('load', () => {
    
    function closeOpenDetails() {
      document.querySelectorAll('details').forEach((details) => {
        if (details.hasAttribute('open')) {
          details.removeAttribute('open')
          details.setAttribute('aria-expanded', 'false')
        }
      })
    }
    
    document.querySelectorAll('details').forEach((details) => {
      const itemToAnimate = details.querySelector('[data-weirdo-show]');

      // Obliczanie wysokości elementu do animacji
      const itemToAnimateHeight = itemToAnimate.scrollHeight;

      details.addEventListener('toggle', () => {
        const summary = details.querySelector('summary');
        const isOpen = details.hasAttribute('open');
        summary!.setAttribute('aria-expanded', isOpen ? 'true' : 'false'); // Ustawienie na true lub false
        itemToAnimate!.style.maxHeight = isOpen ? `${itemToAnimateHeight}px` : '0px';
        itemToAnimate!.classList.toggle('show');
      });

      details.addEventListener('click', () => {
        if (!details.hasAttribute('open')) {
          closeOpenDetails(); // Zamyka inne otwarte szczegóły
        }
      });

      // Ustaw aria-expanded na false dla zamkniętych szczegółów
      if (!details.hasAttribute('open')) {
        details!.querySelector('summary')!.setAttribute('aria-expanded', 'false');
      }
    });
  })

  </script>