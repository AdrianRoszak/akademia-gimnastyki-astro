---
import { Image } from 'astro:assets'
import type { HomePage } from '../../data/digests/digest-home-page-data'
import { urlForImage } from '../../utils'
import Container from '../atoms/Container.astro'
import BodyText from '../molecules/BodyText.astro'
import Heading from '../molecules/Heading.astro'

interface Props {
  data: HomePage['activities']
}

const { data } = Astro.props
---

<section>
  <Container>
    <div class="heading-wrapper">
      <Heading as='h1' size='xl' text={data.title} />
    </div>
    <div class="activities-wrapper">
      {data.activities && data.activities.map((activity) => (
        <div class="activity-item">
          <div class="activity-text" data-weirdo="activity-text">
            <div data-weirdo="activity-heading">
            <Heading as="h2" size='lg' text={activity.name}/>
            </div>
            <div class="portable-text-wrapper">
            <BodyText text={activity.description} />
            </div>
          </div>
          <div class="image-wrapper">
            <div class="transparent-image-background" />
            <Image
            src={urlForImage(activity.image.source)
            .width(1000)
            .format("webp")
            .quality(80)
            .url()}
              alt={activity.image.alt}
              width={1000}
              height={1000}
            />
          </div>
        </div>
      ))}
    </div>
  </Container>
</section>

<script>
  window.addEventListener('load', () => {
    const activityTexts: NodeListOf<HTMLElement> = document.querySelectorAll('[data-weirdo="activity-text"]')
    
    if (activityTexts) {
      activityTexts.forEach((activityText) => {
        
        const activityHeading: HTMLHeadingElement | null = activityText.querySelector('[data-weirdo="activity-heading"]');
        
        if (activityHeading) {
          const activityHeadingHeight = activityHeading.offsetHeight;
          activityText.style.transform = `translateY(calc(100% - ${activityHeadingHeight}px))`
        }
      })
    }
  })
</script>

<style lang="scss">
  .heading-wrapper {
    text-align: center;
    margin-bottom: 2rem;
  }

  .activities-wrapper {
    position: relative;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1px;
  }

  .activity-item {
    position: relative;
    display: grid;
    overflow: hidden;

    &:nth-child(even) {
      .activity-text {

        &::before {
          left: 0;
          
        }
      }
    }

    &:nth-child(odd) {
      .image-wrapper {
        grid-row: 1 / 1;
      }

      .activity-text {
        &::before {
          right: 0;
        }
      }
    }

    &:hover {
      .activity-text {
        transform: translateY(0) !important;
      }
    }
  }


  .activity-text {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 0 4rem;
    display: flex;
    flex-direction: column;
    // justify-content: center;
    z-index: 5;
    transition: transform 0.3s ease-in-out;

    &::after {
      content: "";
      display: block;
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      background-color: var(--weirdo-color-accent-2);
      opacity: 0.8;
      z-index: -1;
    }

    div[data-weirdo="activity-heading"] {
      padding: 1rem 0;
    }
    

    /* &::before {
      content: "";
      display: block;
      width: 15%;
      height: 15%;
      position: absolute;
      top: 0%;
      background-color: var(--weirdo-color-accent-2);
      z-index: -1;
    } */
  }

  .image-wrapper {
    position: relative;
    width: 100%;
    
    &::after {
      content: "";
      position: relative;
      display: block;
      padding-top: 100%;
      // z-index: 2
    }

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;

    }
  }
</style>